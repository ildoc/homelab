---
kestra:
  # Configurazioni comuni
  common:
    kind: Deployment
    replicas: 1
    
    # Strategia di deployment (Recreate per evitare problemi con storage)
    strategy:
      type: Recreate
    
    # Resources
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 2Gi
    
    # Node selector, tolerations, affinity (se necessario)
    nodeSelector: {}
    tolerations: []
    affinity: {}
    
    # Environment variables da secrets
    extraEnvFrom:
      - secretRef:
          name: kestra-workflow-secrets
    
    # Environment variables aggiuntive
    extraEnv:
      - name: TZ
        value: "Europe/Rome"
      # Database connection (usando il secret)
      - name: DATASOURCES_POSTGRES_URL
        value: "jdbc:postgresql://192.168.0.30:5432/kestra_db"
      - name: DATASOURCES_POSTGRES_USERNAME
        value: "kestra_user"
      - name: DATASOURCES_POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: kestra-db-secret
            key: postgres_password

  # Configurazione Kestra
  configurations:
    # Configurazione principale dell'applicazione
    application:
      kestra:
        server:
          base-url: "https://kestra.local.ildoc.it"
        
        # Repository (metadati workflow, executions, etc.)
        repository:
          type: postgres
        
        # Queue (task scheduling)
        queue:
          type: postgres
        
        # Storage per file, logs, outputs
        storage:
          type: local
          local:
            base-path: "/app/storage"
        
        # Tasks configuration
        tasks:
          tmp-dir:
            path: "/tmp/kestra-wd/tmp"
        
        # URL configuration
        url: "https://kestra.local.ildoc.it"
    
    # Secret montato come file per basic auth
    secrets:
      - name: kestra-basic-auth
        key: basic-auth.yml

  # Service Account
  serviceAccount:
    create: true
    automount: false

  # Deployment modes
  deployments:
    # Standalone mode (tutto in un pod - perfetto per homelab)
    standalone:
      enabled: true
      workerThreads: 0  # Auto-detect based on CPU
    
    # Disabilita deployment distribuiti
    webserver:
      enabled: false
    executor:
      enabled: false
    indexer:
      enabled: false
    scheduler:
      enabled: false
    worker:
      enabled: false

  # Service
  service:
    type: ClusterIP
    ports:
      http:
        port: 8080
        containerPort: 8080
        targetPort: http
        protocol: TCP
      management:
        port: 8081
        containerPort: 8081
        targetPort: management
        protocol: TCP

  # Docker-in-Docker per eseguire container
  dind:
    enabled: true
    mode: 'rootless'
    
    base:
      rootless:
        image:
          repository: docker
          pullPolicy: IfNotPresent
          tag: dind-rootless
        securityContext:
          privileged: true
          runAsUser: 1000
          runAsGroup: 1000
        args:
          - --log-level=fatal
          - --group=1000
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 512Mi

  # Ingress disabilitato (usiamo HTTPRoute)
  ingress:
    enabled: false

  # # Manifesti extra per PVC
  # extraManifests:
  #   - apiVersion: v1
  #     kind: PersistentVolumeClaim
  #     metadata:
  #       name: kestra-storage
  #       namespace: apps
  #     spec:
  #       accessModes:
  #         - ReadWriteOnce
  #       storageClassName: nfs-csi
  #       resources:
  #         requests:
  #           storage: 20Gi
