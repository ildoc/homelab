---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: vault-kestra-secrets
  namespace: apps
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-kubernetes-secret-store
    kind: ClusterSecretStore
  target:
    name: kestra-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # PostgreSQL connection (nel formato che Kestra si aspetta)
        application-secrets.yml: |
          kestra:
            datasources:
              postgres:
                url: jdbc:postgresql://192.168.0.30:5432/kestra_db
                driver-class-name: org.postgresql.Driver
                username: {{ .postgres_username }}
                password: {{ .postgres_password }}
        
        # Secrets per i workflow (accessibili con secret() function)
        # External Secrets gi√† gestisce l'encoding, NON serve b64enc
        SECRET_VAULT_ROLE_ID: "{{ .vault_role_id }}"
        SECRET_VAULT_SECRET_ID: "{{ .vault_secret_id }}"
        SECRET_GITLAB_TOKEN: "{{ .gitlab_token }}"
        SECRET_SLACK_WEBHOOK: "{{ .slack_webhook }}"
  
  data:
    - secretKey: postgres_username
      remoteRef:
        key: kubernetes/data/apps/kestra
        property: postgres_username
    
    - secretKey: postgres_password
      remoteRef:
        key: kubernetes/data/apps/kestra
        property: postgres_password
    
    - secretKey: vault_role_id
      remoteRef:
        key: kubernetes/data/apps/kestra
        property: vault_role_id
    
    - secretKey: vault_secret_id
      remoteRef:
        key: kubernetes/data/apps/kestra
        property: vault_secret_id
    
    - secretKey: gitlab_token
      remoteRef:
        key: kubernetes/data/apps/kestra
        property: gitlab_token
    
    - secretKey: slack_webhook
      remoteRef:
        key: kubernetes/data/apps/kestra
        property: slack_webhook
