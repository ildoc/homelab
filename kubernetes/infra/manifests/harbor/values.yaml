---
harbor:
  expose:
    type: clusterIP
    tls:
      enabled: true
      certSource: secret
      secret:
        secretName: "local-ildoc-it-tls"
        notarySecretName: "local-ildoc-it-tls"
    clusterIP:
      name: harbor
      ports:
        httpPort: 80
        httpsPort: 443

  externalURL: https://harbor.local.ildoc.it

  persistence:
    enabled: true
    persistentVolumeClaim:
      registry:
        storageClass: "nfs-csi"
        size: 100Gi
      jobservice:
        jobLog:
          storageClass: "nfs-csi"
          size: 5Gi
      trivy:
        storageClass: "nfs-csi"
        size: 10Gi

  # Database esterno - NON usare existingSecret
  # Le password verranno iniettate via env vars dai secret
  database:
    type: external
    external:
      host: "192.168.0.30"
      port: "5432"
      username: "harbor_user"
      password: "placeholder"  # Verrà sovrascritto da secret
      coreDatabase: "harbor_registry"
      notaryServerDatabase: "harbor_notary_server"
      notarySignerDatabase: "harbor_notary_signer"
      sslmode: "disable"

  # Redis esterno - NON usare existingSecret  
  # Le password verranno iniettate via env vars dai secret
  redis:
    type: external
    external:
      addr: "192.168.0.40:6379"
      password: "placeholder"  # Verrà sovrascritto da secret
      coreDatabaseIndex: "0"
      jobserviceDatabaseIndex: "1"
      registryDatabaseIndex: "2"
      trivyAdapterIndex: "5"

  # Per questi componenti, existingSecret funziona correttamente
  core:
    replicas: 2
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m
    existingSecret: "harbor-core-secret"
    # Inietta password da secret come env vars
    extraEnvVars:
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: harbor-database-secret
            key: POSTGRESQL_PASSWORD
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: harbor-redis-secret
            key: REDIS_PASSWORD

  jobservice:
    replicas: 2
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m
    # Inietta password da secret come env vars
    extraEnvVars:
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: harbor-database-secret
            key: POSTGRESQL_PASSWORD
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: harbor-redis-secret
            key: REDIS_PASSWORD

  registry:
    replicas: 2
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m
    existingSecret: "harbor-registry-secret"
    # Inietta password Redis da secret
    extraEnvVars:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: harbor-redis-secret
            key: REDIS_PASSWORD

  portal:
    replicas: 2
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m

  trivy:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    # Inietta password Redis da secret
    extraEnvVars:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: harbor-redis-secret
            key: REDIS_PASSWORD

  notary:
    enabled: false

  metrics:
    enabled: true
    serviceMonitor:
      enabled: false
