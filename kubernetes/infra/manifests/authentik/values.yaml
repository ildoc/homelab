---
authentik:
  # Secret key - DEVE essere configurato come variabile d'ambiente
  secret_key: ""  # Lascia vuoto, usa envFrom
  
  # Configurazione logging
  log_level: info
  
  # Avatars
  avatars: gravatar,initials
  
  # Error reporting
  error_reporting:
    enabled: false
  
  # Email configuration (opzionale)
  email:
    host: ""
    port: 587
    username: ""
    use_tls: false
    use_ssl: false
    timeout: 30
    from: "authentik@local.ildoc.it"
  
  # PostgreSQL - IMPORTANTE: lascia vuoto password, usa envFrom
  postgresql:
    host: "192.168.0.30"
    port: 5432
    name: "authentik_db"
    user: "authentik_user"
    password: ""  # Lascia vuoto
  
  # Redis - IMPORTANTE: lascia vuoto password, usa envFrom
  redis:
    host: "192.168.0.40"
    password: ""  # Lascia vuoto

# Global storage class
global:
  storageClass: nfs-csi

# Server deployment
server:
  replicas: 2
  
  # CRITICO: usa envFrom per i secrets
  envFrom:
    - secretRef:
        name: authentik-secret
    - secretRef:
        name: authentik-postgresql-secret
    - secretRef:
        name: authentik-redis-secret
  
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik
                app.kubernetes.io/component: server
            topologyKey: kubernetes.io/hostname
  
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false
  
  ingress:
    enabled: false  # Useremo HTTPRoute

# Worker deployment
worker:
  replicas: 2
  
  # CRITICO: usa envFrom per i secrets
  envFrom:
    - secretRef:
        name: authentik-secret
    - secretRef:
        name: authentik-postgresql-secret
    - secretRef:
        name: authentik-redis-secret
  
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik
                app.kubernetes.io/component: worker
            topologyKey: kubernetes.io/hostname
  
  # Abilita metriche worker (nuovo in 2025.8)
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

# PostgreSQL subchart
postgresql:
  enabled: false

# Redis subchart
redis:
  enabled: true
  architecture: standalone
  
  # Usa immagini docker.io/library (importante per 2025.8+)
  image:
    registry: docker.io
    repository: library/redis
    tag: "8.2"
  
  auth:
    enabled: true
    existingSecret: authentik-redis-secret
    existingSecretPasswordKey: password
  
  master:
    persistence:
      enabled: true
      storageClass: nfs-csi
      size: 5Gi
    
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

# ServiceAccount
serviceAccount:
  create: true
  annotations: {}

# Configurazioni custom per il wrapper chart
ingress:
  hostname: auth.local.ildoc.it

smtp:
  enabled: false

# Configurazione Outpost per forward auth
outpost:
  replicas: 2
  image:
    tag: "2025.8.4"
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik-proxy-outpost
            topologyKey: kubernetes.io/hostname
