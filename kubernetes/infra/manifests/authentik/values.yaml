---
# =============================================================================
# AUTHENTIK CORE CONFIGURATION
# =============================================================================
authentik:
  # Log level
  log_level: info
  
  # Avatars
  avatars: gravatar,initials
  
  # Error reporting - disabilitato
  error_reporting:
    enabled: false
  
  # PostgreSQL ESTERNO - configurazione connessione
  postgresql:
    host: "192.168.0.30"
    port: 5432
    name: "authentik_db"
    user: "authentik_user"
    # password verrà letta da AUTHENTIK_POSTGRESQL__PASSWORD nel secret
  
  # Redis ESTERNO - configurazione connessione
  redis:
    host: "192.168.0.40"
    port: 6379
    # password verrà letta da AUTHENTIK_REDIS__PASSWORD nel secret
  
  # Email configuration (opzionale)
  email:
    host: ""
    port: 587
    username: ""
    password: ""
    use_tls: false
    use_ssl: false
    timeout: 30
    from: "authentik@local.ildoc.it"

# IMPORTANTE: Usa i secret esistenti creati da External Secrets
# Il chart usa envFrom per caricare automaticamente tutte le chiavi dal secret
# Quindi dobbiamo creare/modificare il secret "authentik" per includere tutte le variabili
env: {}

# =============================================================================
# GLOBAL CONFIGURATION
# =============================================================================
global:
  # Storage class per PVC (se necessario)
  storageClass: nfs-csi
  
  # Deployment strategy comune
  deploymentStrategy:
    type: RollingUpdate
  
  # IMPORTANTE: Usa questo per iniettare env vars globali
  envFrom:
    - secretRef:
        name: authentik-secret
    - secretRef:
        name: authentik-postgresql-secret
    - secretRef:
        name: authentik-redis-secret

# =============================================================================
# SERVER DEPLOYMENT
# =============================================================================
server:
  # Nome del deployment
  name: server
  
  # Numero di repliche
  replicas: 2
  
  # Resources
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 2Gi
  
  # Anti-affinity per distribuire i pod su nodi diversi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik
                app.kubernetes.io/component: server
            topologyKey: kubernetes.io/hostname
  
  # Probes
  livenessProbe:
    httpGet:
      path: /-/health/live/
      port: http
    initialDelaySeconds: 50
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /-/health/ready/
      port: http
    initialDelaySeconds: 50
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  startupProbe:
    httpGet:
      path: /-/health/live/
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 60
  
  # Service configuration
  service:
    type: ClusterIP
    port: 80
    name: http
    protocol: TCP
    annotations: {}
  
  # Metrics
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false
  
  # Ingress - DISABILITATO (usiamo HTTPRoute custom)
  ingress:
    enabled: false
  
  # PDB
  pdb:
    enabled: true
    minAvailable: 1

# =============================================================================
# WORKER DEPLOYMENT
# =============================================================================
worker:
  # Nome del deployment
  name: worker
  
  # Numero di repliche
  replicas: 2
  
  # Resources
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  
  # Anti-affinity
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik
                app.kubernetes.io/component: worker
            topologyKey: kubernetes.io/hostname
  
  # PDB
  pdb:
    enabled: true
    minAvailable: 1
  
  # Metrics (novità in 2025.8.x)
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

# =============================================================================
# POSTGRESQL SUBCHART - DISABILITATO (usi PostgreSQL esterno)
# =============================================================================
postgresql:
  enabled: false

# =============================================================================
# REDIS SUBCHART - DISABILITATO (usi Redis esterno)
# =============================================================================
redis:
  enabled: false

# =============================================================================
# SERVICE ACCOUNT
# =============================================================================
serviceAccount:
  # Necessario per managed outposts
  create: true
  annotations: {}
  
  # Disabilita il secret del service account (non necessario)
  serviceAccountSecret:
    enabled: false

# =============================================================================
# GEOIP - OPZIONALE
# =============================================================================
geoip:
  enabled: false
  editionIds: "GeoLite2-City GeoLite2-ASN"
  updateInterval: 8
  accountId: ""
  licenseKey: ""

# =============================================================================
# CONFIGURAZIONI CUSTOM PER IL WRAPPER CHART
# =============================================================================

# Hostname per HTTPRoute custom
ingress:
  hostname: auth.local.ildoc.it

# SMTP (se necessario in futuro)
smtp:
  enabled: false

# Outpost per forward auth (proxy provider)
outpost:
  replicas: 2
  image:
    tag: "2025.8.4"
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: authentik-proxy-outpost
            topologyKey: kubernetes.io/hostname
