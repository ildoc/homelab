---
# Secret principale di Authentik
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-kubernetes-secret-store
    kind: ClusterSecretStore
  target:
    name: authentik-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        AUTHENTIK_SECRET_KEY: "{{ `{{ .secret_key }}` }}"
  data:
  - secretKey: secret_key
    remoteRef:
      key: kubernetes/data/authentik
      property: secret-key

---
# Secret per PostgreSQL
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik-postgresql-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-kubernetes-secret-store
    kind: ClusterSecretStore
  target:
    name: authentik-postgresql-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        postgres-password: "{{ `{{ .postgres_admin_password }}` }}"
        password: "{{ `{{ .postgres_user_password }}` }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: "{{ `{{ .postgres_user_password }}` }}"
  data:
  - secretKey: postgres_admin_password
    remoteRef:
      key: kubernetes/data/authentik
      property: postgres-admin-password
  - secretKey: postgres_user_password
    remoteRef:
      key: kubernetes/data/authentik
      property: postgres-user-password

---
# Secret per Redis
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik-redis-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-kubernetes-secret-store
    kind: ClusterSecretStore
  target:
    name: authentik-redis-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        password: "{{ `{{ .redis_password }}` }}"
        AUTHENTIK_REDIS__PASSWORD: "{{ `{{ .redis_password }}` }}"
  data:
  - secretKey: redis_password
    remoteRef:
      key: kubernetes/data/authentik
      property: redis-password

---
# Secret per SMTP (opzionale)
{{- if .Values.smtp.enabled }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik-smtp-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-kubernetes-secret-store
    kind: ClusterSecretStore
  target:
    name: authentik-smtp-secret
    creationPolicy: Owner
  data:
  - secretKey: password
    remoteRef:
      key: kubernetes/data/authentik
      property: smtp-password
{{- end }}
