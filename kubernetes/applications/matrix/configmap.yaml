---
apiVersion: v1
kind: ConfigMap
metadata:
  name: matrix-config
  namespace: apps
  annotations:
    argocd.argoproj.io/sync-wave: "1"
data:
  homeserver.yaml: |
    server_name: "matrix.ildoc.it"
    public_baseurl: "https://matrix.ildoc.it"
    
    presence:
      enabled: false

    listeners:
      - port: 8008
        tls: false
        type: http
        x_forwarded: true
        bind_addresses: ['0.0.0.0']
        resources:
          - names: [client, federation]
            compress: false

    # Database
    database:
      name: psycopg2
      args:
        user: matrix_user
        password: ${POSTGRES_PASSWORD}
        database: matrix_db
        host: 192.168.0.30
        port: 5432
        cp_min: 5
        cp_max: 10
        keepalives_idle: 10
        keepalives_interval: 10
        keepalives_count: 3

    # Redis
    redis:
      enabled: true
      host: matrix-redis.apps.svc.cluster.local
      port: 6379
      password: ${SYNAPSE_REDIS_PASSWORD}

    log_config: "/data/log.config"
    media_store_path: "/data/media_store"
    max_upload_size: "50M"
    max_image_pixels: "32M"
    url_preview_enabled: false
    
    # =========================================================================
    # REGISTRAZIONE E PASSWORD
    # =========================================================================
    enable_registration: false
    enable_registration_without_verification: false
    registration_requires_token: false
    
    password_config:
      enabled: false
      localdb_enabled: true
      pepper: ""
      policy:
        enabled: false
    
    # =========================================================================
    # CONFIGURAZIONE OIDC CON AUTHENTIK
    # =========================================================================
    oidc_providers:
      - idp_id: oidc-authentik
        idp_name: "Authentik"
        discover: true
        issuer: "https://auth.ildoc.it/application/o/matrix-synapse/"
        client_id: "matrix-synapse"
        client_secret: ${OIDC_CLIENT_SECRET}
        scopes: ["openid", "profile", "email"]
        
        # Abilita device authorization per QR code
        enable_device_authorization: true
        
        # Mapping attributi
        user_mapping_provider:
          config:
            localpart_template: "{{ user.preferred_username }}"
            display_name_template: "{{ user.name|default(user.preferred_username) }}"
            email_template: "{{ user.email }}"
            subject_claim: "sub"
        
        # Comportamento autenticazione
        allow_existing_users: true
    
    # =========================================================================
    # SECRET E CONFIGURAZIONI
    # =========================================================================
    registration_shared_secret: ${REGISTRATION_SHARED_SECRET}
    macaroon_secret_key: ${MACAROON_SECRET_KEY}
    form_secret: ${FORM_SECRET}
    
    enable_3pid_lookup: false
    allow_public_rooms_without_auth: true
    allow_public_rooms_over_federation: true
    
    # === RATE LIMITING (RELAXED) ===
    rc_message:
      per_second: 100
      burst_count: 100

    rc_login:
      address:
        per_second: 10
        burst_count: 10
      account:
        per_second: 10
        burst_count: 10

    rc_joins:
      local:
        per_second: 1
        burst_count: 10
      remote:
        per_second: 1
        burst_count: 10

    rc_invites:
      per_room:
        per_second: 10
        burst_count: 100
      per_user:
        per_second: 10
        burst_count: 100
    
    # Chiavi e federation
    signing_key_path: "/data/keys/signing.key"
    
    trusted_key_servers:
      - server_name: "matrix.org"
    
    report_stats: false
    enable_metrics: true
    metrics_port: 9000

    # === ROOM SYNC OPTIMIZATION ===
    filter_timeline_limit: 50

    limit_remote_rooms:
      enabled: true
      complexity: 3.0
      admins_can_join: true

    retention:
      enabled: true
      default_policy:
        max_lifetime: 90d
      allowed_lifetime_max: 90d
      purge_jobs:
        - interval: 1d

    # === MEMORY OPTIMIZATION ===
    event_cache_size: 20K

    caches:
      global_factor: 1.0
      expire_caches: true
      cache_entry_ttl: 30m
      sync_response_cache_duration: 2m
      
      per_cache_factors:
        stateGroupCache: 0.5
        stateGroupMembersCache: 0.5
        get_rooms_for_user: 2.0
        get_user_by_access_token: 2.0

    gc_thresholds: [550, 10, 10]
    gc_min_interval: [1s, 1m, 2m]

    # === FEATURE OPTIMIZATION ===
    # url_preview_enabled: false
    enable_metrics: false
    max_upload_size: 50M
    max_image_pixels: 32M

    media_retention:
      local_media_lifetime: 90d
      remote_media_lifetime: 30d

    # Federation
    federation:
      backfill_on_join: false


  log.config: |
    version: 1
    
    formatters:
      precise:
        format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'
    
    handlers:
      console:
        class: logging.StreamHandler
        formatter: precise
        stream: ext://sys.stdout
    
    loggers:
        synapse.storage.SQL:
            level: INFO
        synapse.handlers.oidc:
            level: DEBUG
        synapse.handlers.sso:
            level: DEBUG
    
    root:
      level: INFO
      handlers: [console]
    
    disable_existing_loggers: false
