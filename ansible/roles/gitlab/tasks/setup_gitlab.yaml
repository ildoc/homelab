---
- name: Create data folder
  ansible.builtin.file:
    path: ~/gitlab/data
    state: directory
    mode: '0755'
    recurse: true

- name: Create config folder
  ansible.builtin.file:
    path: ~/gitlab/config
    state: directory
    mode: '0755'
    recurse: true

- name: Create logs folder
  ansible.builtin.file:
    path: ~/gitlab/logs
    state: directory
    mode: '0755'
    recurse: true

- name: Create runnerconfig folder
  ansible.builtin.file:
    path: ~/runner
    state: directory
    mode: '0755'

- name: Copy entrypoint.sh
  ansible.builtin.copy:
    src: "{{ gitlab_files_path }}/entrypoint.sh"
    dest: ~/gitlab/entrypoint.sh
    mode: '0755'
  register: entrypoint_result

- name: Set variables
  ansible.builtin.set_fact:
    remote_path: ~/docker-compose.yml
    local_path: "{{ gitlab_files_path }}/docker-compose.yml"
    project_path: .

- name: Include update docker-compose
  ansible.builtin.include_tasks: "{{ tasks_dir }}/docker/update-compose-unified.yaml"
  vars:
    update_compose_remote_path: "{{ remote_path }}"
    update_compose_local_path: "{{ local_path }}"
    update_compose_project_path: "{{ project_path }}"

- name: Get remote gitlab.rb
  ansible.builtin.stat:
    path: ~/gitlab/config/gitlab.rb
  register: remote_gitlab_rb

- name: Read remote file content
  ansible.builtin.slurp:
    src: ~/gitlab/config/gitlab.rb
  register: remote_gitlab_rb_content
  when: remote_gitlab_rb.stat.exists

- name: Render templates as string
  ansible.builtin.set_fact:
    gitlab_rb_template_rendered: "{{ lookup('template', gitlab_templates_path + 'gitlab.rb.j2') }}"

- name: Check text differences
  ansible.builtin.set_fact:
    gitlab_rb_different: >-
      {{
        not remote_gitlab_rb.stat.exists or
        (remote_gitlab_rb_content.content | b64decode).strip() != gitlab_rb_template_rendered.strip()
      }}

- name: Are they different?
  ansible.builtin.debug:
    msg: "GitLab.rb needs update: {{ gitlab_rb_different }}"

- name: Actions to do if files are different
  when: gitlab_rb_different
  block:
    - name: Backup existing gitlab.rb if exists
      ansible.builtin.copy:
        src: ~/gitlab/config/gitlab.rb
        dest: ~/gitlab/config/gitlab.rb.{{ ansible_date_time.epoch }}
        remote_src: true
      when: remote_gitlab_rb.stat.exists

    - name: Copy gitlab.rb
      ansible.builtin.template:
        src: gitlab.rb.j2
        dest: ~/gitlab/config/gitlab.rb
        mode: '0644'
        backup: true

    - name: Check if GitLab container is running
      ansible.builtin.command: docker ps -q -f name=gitlab
      register: gitlab_container_running
      changed_when: false
      failed_when: false

    - name: Reconfigure GitLab (only if container is running)
      ansible.builtin.command: docker exec -t gitlab gitlab-ctl reconfigure
      when: gitlab_container_running.stdout != ""
      register: reconfigure_result
      # Timeout dopo 5 minuti se la riconfigurazione si blocca
      async: 300
      poll: 10

    - name: Report reconfigure result
      ansible.builtin.debug:
        msg: "GitLab reconfigured successfully"
      when: reconfigure_result is defined and reconfigure_result.changed
