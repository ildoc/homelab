---
services:
  gitlab:
    image: gitlab/gitlab-ce:18.4.0-ce.0
    container_name: gitlab
    hostname: 'gitlab'
    ports:
      - '80:80'
      - '22:22'
      - '5000:5000'
    volumes:
      - ./gitlab/config:/etc/gitlab
      - ./gitlab/logs:/var/log/gitlab
      - ./gitlab/data:/var/opt/gitlab
      - ./gitlab/entrypoint.sh:/entrypoint.sh
    command: ["/entrypoint.sh"]
    shm_size: '256m'
    restart: unless-stopped

  runner:
    image: 'gitlab/gitlab-runner:latest'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./runner:/etc/gitlab-runner
    restart: always
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock

  nginx:
    image: nginx:stable
    container_name: nginx
    depends_on:
      - gitlab
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
    restart: always

  # Nuovo servizio per pulizia automatica
  docker-cleanup:
    image: docker:latest
    container_name: docker-cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CLEANUP_INTERVAL=86400  # 24 ore in secondi
      - PRUNE_UNTIL=24h          # Rimuovi immagini piÃ¹ vecchie di 24 ore
    command: >
      sh -c "
        echo 'Docker cleanup service started';
        while true; do
          echo 'Running cleanup at' $$(date);
          docker system prune -af --filter 'until=$${PRUNE_UNTIL}' --volumes;
          docker image prune -af --filter 'until=$${PRUNE_UNTIL}';
          docker container prune -f --filter 'until=$${PRUNE_UNTIL}';
          docker volume prune -f;
          echo 'Cleanup completed. Sleeping for $${CLEANUP_INTERVAL} seconds';
          sleep $${CLEANUP_INTERVAL};
        done
      "
    restart: unless-stopped
