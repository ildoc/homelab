---
- name: Check if Kubernetes is initialized
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: kubeadm_initialized

- name: Ensure containerd is running
  ansible.builtin.systemd:
    name: containerd
    state: started
    enabled: true
  when: kubeadm_initialized.stat.exists

- name: Pull kube-vip image
  ansible.builtin.command: >
    ctr image pull ghcr.io/kube-vip/kube-vip:{{ kubernetes.kube_vip_tag_version }}
  when: kubeadm_initialized.stat.exists

- name: Generate kube-vip manifest
  ansible.builtin.command: >
    ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:{{ kubernetes.kube_vip_tag_version }} vip /kube-vip manifest pod
    --interface {{ kubernetes.vip_interface }}
    --address {{ kubernetes.vip_address }}
    --controlplane
    --services
    --arp
    --leaderElection
  register: kube_vip_manifest
  changed_when: false
  when: kubeadm_initialized.stat.exists

- name: Ensure manifests directory exists
  ansible.builtin.file:
    path: /etc/kubernetes/manifests
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: kubeadm_initialized.stat.exists

- name: Save kube-vip manifest to file
  ansible.builtin.copy:
    content: "{{ kube_vip_manifest.stdout }}"
    dest: "/etc/kubernetes/manifests/kube-vip.yaml"
    owner: root
    group: root
    mode: '0644'
  when: kubeadm_initialized.stat.exists

- name: Restart kubelet to apply kube-vip
  ansible.builtin.systemd:
    name: kubelet
    state: restarted
  when: kubeadm_initialized.stat.exists
