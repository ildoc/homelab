---
- name: Get existing whitelist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/white"
    method: GET
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
    return_content: yes
  register: existing_whitelist_regex

- name: Create lookup dict for existing whitelist regex
  ansible.builtin.set_fact:
    existing_whitelist_regex_dict: "{{ dict(existing_whitelist_regex.json.regex | default([]) | 
                                       map(attribute='domain') | 
                                       zip(existing_whitelist_regex.json.regex | default([]))) }}"

- name: Create lookup dict for desired whitelist regex
  ansible.builtin.set_fact:
    desired_whitelist_regex_dict: "{{ dict(pihole.whitelist.regex | 
                                      map(attribute='domain') | 
                                      zip(pihole.whitelist.regex)) }}"

- name: Get list of existing whitelist regex patterns
  ansible.builtin.set_fact:
    existing_whitelist_regex_patterns: "{{ existing_whitelist_regex.json.regex | default([]) | map(attribute='domain') | list }}"

- name: Get list of desired whitelist regex patterns
  ansible.builtin.set_fact:
    desired_whitelist_regex_patterns: "{{ pihole.whitelist.regex | map(attribute='domain') | list }}"

- name: Identify whitelist regex to add
  ansible.builtin.set_fact:
    whitelist_regex_to_add: "{{ desired_whitelist_regex_patterns | difference(existing_whitelist_regex_patterns) }}"

- name: Identify whitelist regex to remove
  ansible.builtin.set_fact:
    whitelist_regex_to_remove: "{{ existing_whitelist_regex_patterns | difference(desired_whitelist_regex_patterns) }}"

- name: Identify whitelist regex to update
  ansible.builtin.set_fact:
    whitelist_regex_to_update: []

- name: Check for whitelist regex needing updates
  ansible.builtin.set_fact:
    whitelist_regex_to_update: "{{ whitelist_regex_to_update + [item] }}"
  loop: "{{ desired_whitelist_regex_patterns | intersect(existing_whitelist_regex_patterns) }}"
  when: 
    - existing_whitelist_regex_dict[item].enabled != (desired_whitelist_regex_dict[item].enabled | default(true) | int) or
      existing_whitelist_regex_dict[item].comment != (desired_whitelist_regex_dict[item].comment | default(''))

- name: Add new whitelist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/white"
    method: POST
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      domain: "{{ desired_whitelist_regex_dict[item].domain }}"
      enabled: "{{ desired_whitelist_regex_dict[item].enabled | default(true) }}"
      comment: "{{ desired_whitelist_regex_dict[item].comment | default('') }}"
    status_code: [200, 201]
  loop: "{{ whitelist_regex_to_add }}"
  when: whitelist_regex_to_add | length > 0

- name: Update existing whitelist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/white/{{ existing_whitelist_regex_dict[item].id }}"
    method: PUT
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      enabled: "{{ desired_whitelist_regex_dict[item].enabled | default(true) }}"
      comment: "{{ desired_whitelist_regex_dict[item].comment | default('') }}"
    status_code: [200, 204]
  loop: "{{ whitelist_regex_to_update }}"
  when: whitelist_regex_to_update | length > 0

- name: Remove obsolete whitelist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/white/{{ existing_whitelist_regex_dict[item].id }}"
    method: DELETE
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
    status_code: [200, 204]
  loop: "{{ whitelist_regex_to_remove }}"
  when: whitelist_regex_to_remove | length > 0

- name: Display whitelist regex changes summary
  ansible.builtin.debug:
    msg:
      - "Whitelist regex added: {{ whitelist_regex_to_add | length }}"
      - "Whitelist regex updated: {{ whitelist_regex_to_update | length }}"
      - "Whitelist regex removed: {{ whitelist_regex_to_remove | length }}"
  when: (whitelist_regex_to_add | length > 0) or (whitelist_regex_to_update | length > 0) or (whitelist_regex_to_remove | length > 0)
