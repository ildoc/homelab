---
# ansible/roles/pihole6/tasks/manage_pihole_resource.yml
# Task generico per gestire qualsiasi risorsa Pi-hole

- name: "Get existing {{ resource_name }}"
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/{{ api_endpoint }}"
    method: GET
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
    return_content: true
  register: existing_resources

- name: "Create lookup dict for existing {{ resource_name }}"
  ansible.builtin.set_fact:
    existing_dict: "{{ dict(existing_resources.json[response_key] | default([]) | 
                       map(attribute=key_attribute) | 
                       zip(existing_resources.json[response_key] | default([]))) }}"

- name: "Create lookup dict for desired {{ resource_name }}"
  ansible.builtin.set_fact:
    desired_dict: "{{ dict(desired_resources | 
                      map(attribute=key_attribute) | 
                      zip(desired_resources)) }}"

- name: "Get list of existing {{ resource_name }} keys"
  ansible.builtin.set_fact:
    existing_keys: "{{ existing_resources.json[response_key] | default([]) | map(attribute=key_attribute) | list }}"

- name: "Get list of desired {{ resource_name }} keys"
  ansible.builtin.set_fact:
    desired_keys: "{{ desired_resources | map(attribute=key_attribute) | list }}"

- name: "Identify {{ resource_name }} to add"
  ansible.builtin.set_fact:
    to_add: "{{ desired_keys | difference(existing_keys) }}"

- name: "Identify {{ resource_name }} to remove"
  ansible.builtin.set_fact:
    to_remove: "{{ existing_keys | difference(desired_keys) }}"

- name: "Identify {{ resource_name }} to update"
  ansible.builtin.set_fact:
    to_update: []

- name: "Check for {{ resource_name }} needing updates"
  ansible.builtin.set_fact:
    to_update: "{{ to_update + [item] }}"
  loop: "{{ desired_keys | intersect(existing_keys) }}"
  when: update_condition

- name: "Add new {{ resource_name }}"
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/{{ api_endpoint }}"
    method: POST
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
      Content-Type: "application/json"
    body_format: json
    body: "{{ add_body }}"
    status_code: [200, 201]
  loop: "{{ to_add }}"
  when: to_add | length > 0
  vars:
    add_body: "{{ body_template | combine({'item': item}) }}"

- name: "Update existing {{ resource_name }}"
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/{{ api_endpoint }}/{{ existing_dict[item].id }}"
    method: PUT
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
      Content-Type: "application/json"
    body_format: json
    body: "{{ update_body }}"
    status_code: [200, 204]
  loop: "{{ to_update }}"
  when: to_update | length > 0

- name: "Remove obsolete {{ resource_name }}"
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/{{ api_endpoint }}/{{ existing_dict[item].id }}"
    method: DELETE
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
    status_code: [200, 204]
  loop: "{{ to_remove }}"
  when: to_remove | length > 0

- name: "Display {{ resource_name }} changes summary"
  ansible.builtin.debug:
    msg:
      - "{{ resource_name }} added: {{ to_add | length }}"
      - "{{ resource_name }} updated: {{ to_update | length }}"
      - "{{ resource_name }} removed: {{ to_remove | length }}"
  when: (to_add | length > 0) or (to_update | length > 0) or (to_remove | length > 0)

- name: Set gravity update flag if needed
  ansible.builtin.set_fact:
    adlists_changed: true
  when:
    - trigger_gravity | default(false)
    - (to_add | length > 0) or (to_update | length > 0) or (to_remove | length > 0)
