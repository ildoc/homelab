---
- name: Get existing blacklist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/black"
    method: GET
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
    return_content: true
  register: existing_blacklist_regex

- name: Create lookup dict for existing blacklist regex
  ansible.builtin.set_fact:
    existing_blacklist_regex_dict: "{{ dict(existing_blacklist_regex.json.regex | default([]) | 
                                       map(attribute='domain') | 
                                       zip(existing_blacklist_regex.json.regex | default([]))) }}"

- name: Create lookup dict for desired blacklist regex
  ansible.builtin.set_fact:
    desired_blacklist_regex_dict: "{{ dict(pihole.blacklist.regex | 
                                      map(attribute='domain') | 
                                      zip(pihole.blacklist.regex)) }}"

- name: Get list of existing blacklist regex patterns
  ansible.builtin.set_fact:
    existing_blacklist_regex_patterns: "{{ existing_blacklist_regex.json.regex | default([]) | map(attribute='domain') | list }}"

- name: Get list of desired blacklist regex patterns
  ansible.builtin.set_fact:
    desired_blacklist_regex_patterns: "{{ pihole.blacklist.regex | map(attribute='domain') | list }}"

- name: Identify blacklist regex to add
  ansible.builtin.set_fact:
    blacklist_regex_to_add: "{{ desired_blacklist_regex_patterns | difference(existing_blacklist_regex_patterns) }}"

- name: Identify blacklist regex to remove
  ansible.builtin.set_fact:
    blacklist_regex_to_remove: "{{ existing_blacklist_regex_patterns | difference(desired_blacklist_regex_patterns) }}"

- name: Identify blacklist regex to update
  ansible.builtin.set_fact:
    blacklist_regex_to_update: []

- name: Check for blacklist regex needing updates
  ansible.builtin.set_fact:
    blacklist_regex_to_update: "{{ blacklist_regex_to_update + [item] }}"
  loop: "{{ desired_blacklist_regex_patterns | intersect(existing_blacklist_regex_patterns) }}"
  when:
    - existing_blacklist_regex_dict[item].enabled != (desired_blacklist_regex_dict[item].enabled | default(true) | int) or
      existing_blacklist_regex_dict[item].comment != (desired_blacklist_regex_dict[item].comment | default(''))

- name: Add new blacklist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/black"
    method: POST
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      domain: "{{ desired_blacklist_regex_dict[item].domain }}"
      enabled: "{{ desired_blacklist_regex_dict[item].enabled | default(true) }}"
      comment: "{{ desired_blacklist_regex_dict[item].comment | default('') }}"
    status_code: [200, 201]
  loop: "{{ blacklist_regex_to_add }}"
  when: blacklist_regex_to_add | length > 0

- name: Update existing blacklist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/black/{{ existing_blacklist_regex_dict[item].id }}"
    method: PUT
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      enabled: "{{ desired_blacklist_regex_dict[item].enabled | default(true) }}"
      comment: "{{ desired_blacklist_regex_dict[item].comment | default('') }}"
    status_code: [200, 204]
  loop: "{{ blacklist_regex_to_update }}"
  when: blacklist_regex_to_update | length > 0

- name: Remove obsolete blacklist regex
  ansible.builtin.uri:
    url: "{{ pihole.api_url }}/api/lists/regex/black/{{ existing_blacklist_regex_dict[item].id }}"
    method: DELETE
    headers:
      X-FTL-SID: "{{ pihole.api_key }}"
    status_code: [200, 204]
  loop: "{{ blacklist_regex_to_remove }}"
  when: blacklist_regex_to_remove | length > 0

- name: Display blacklist regex changes summary
  ansible.builtin.debug:
    msg:
      - "Blacklist regex added: {{ blacklist_regex_to_add | length }}"
      - "Blacklist regex updated: {{ blacklist_regex_to_update | length }}"
      - "Blacklist regex removed: {{ blacklist_regex_to_remove | length }}"
  when: (blacklist_regex_to_add | length > 0) or (blacklist_regex_to_update | length > 0) or (blacklist_regex_to_remove | length > 0)
