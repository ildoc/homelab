---
current_username: filippo
# ansible_python_interpreter: /usr/bin/python3

install_zsh: true
install_oh_my_zsh: true
push_ssh_keys: true

pihole:
  dns_records:
    
    - { ip: 192.168.0.10, domain: "pve01" }
    - { ip: 192.168.0.11, domain: "pve02" }
    - { ip: 192.168.0.12, domain: "pve03" }
    
    - { ip: 192.168.0.111, domain: "invidious" }
    - { ip: 192.168.0.123, domain: "truenas" }
    - { ip: 192.168.0.124, domain: "web" }
    - { ip: 192.168.0.133, domain: "homeassistant" }
    - { ip: 192.168.0.145, domain: "pihole" }
    - { ip: 192.168.0.167, domain: "pihole2" }
    - { ip: 192.168.0.183, domain: "ubuntu" }

    - { ip: 192.168.0.30, domain: "db" }
    - { ip: 192.168.0.40, domain: "redis" }
    - { ip: 192.168.0.50, domain: "vault" }

    - { ip: 192.168.0.80, domain: "argocd.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "longhorn.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "rancher.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "traefik.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "sonarr.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "radarr.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "bazarr.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "prowlarr.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "jackett.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "flaresolverr.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "pdf.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "tools.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "change.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "truenas.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "mealie.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "wg.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "uptime.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "homepage.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "speedtest.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "nut.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "romm.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "zipline.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "invidious.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "readarr.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "bookbounty.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "kestra.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "paperless.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "kitchenowl.local.ildoc.it" }
    - { ip: 192.168.0.80, domain: "audiobookshelf.local.ildoc.it" }
    - { ip: 192.168.0.25, domain: "gitlab.local.ildoc.it" }
    - { ip: 192.168.0.25, domain: "registry.gitlab.local.ildoc.it" }

    - { ip: 192.168.0.100, domain: "argocd2.local.ildoc.it" }
    - { ip: 192.168.0.100, domain: "traefik2.local.ildoc.it" }
    - { ip: 192.168.0.100, domain: "rancher2.local.ildoc.it" }

  dhcp_reservations:
    - { mac: 60:83:E7:AC:6C:68, ip: 192.168.0.175, hostname: archlinux }
    - { mac: 02:F1:76:00:ED:DD, ip: 192.168.0.133, hostname: homeassistant }
    - { mac: BC:24:11:F2:C2:A4, ip: 192.168.0.111, hostname: invidious }
    - { mac: BC:24:11:D2:18:86, ip: 192.168.0.192, hostname: mediaserver }
    - { mac: BC:24:11:5A:5D:EC, ip: 192.168.0.124, hostname: web }
    - { mac: 2C:CF:67:43:0B:FB, ip: 192.168.0.167, hostname: pihole2 }
    - { mac: BC:24:11:07:CC:1D, ip: 192.168.0.180, hostname: kube-01 }
    - { mac: BC:24:11:13:0F:8C, ip: 192.168.0.181, hostname: kube-02 }
    - { mac: BC:24:11:41:20:6E, ip: 192.168.0.182, hostname: kube-03 }
    - { mac: BC:24:11:0A:07:CF, ip: 192.168.0.183, hostname: ubuntu }
    - { mac: 04:7C:16:70:7D:02, ip: 192.168.0.123, hostname: truenas }
    - { mac: BC:24:11:DE:F6:0A, ip: 192.168.0.75, hostname: wireguard }
    - { mac: BC:24:11:B9:E8:E5, ip: 192.168.0.50, hostname: vault }
    - { mac: AA:BB:CC:DD:EE:01, ip: 192.168.0.60, hostname: kube01-test }
    - { mac: AA:BB:CC:DD:EE:02, ip: 192.168.0.61, hostname: kube02-test }
    - { mac: AA:BB:CC:DD:EE:03, ip: 192.168.0.62, hostname: kube03-test }
    - { mac: AA:AA:AA:AA:AA:AA, ip: 192.168.0.25, hostname: gitlab }
    - { mac: AA:AA:AA:AA:AA:DB, ip: 192.168.0.30, hostname: db }
    - { mac: AA:AA:AA:AA:CA:CE, ip: 192.168.0.40, hostname: redis }
      
    - { mac: aa:bb:cc:11:22:88, ip: 192.168.0.41, hostname: webserver-app }
    - { mac: aa:bb:cc:22:11:77, ip: 192.168.0.42, hostname: mongodb-db }   

nut:
  ups_name: ups
  server_ip: 192.168.0.123
  username: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/nut:username') }}"
  password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/nut:password') }}"

tasks_dir: ./tasks

gitlab:
  domain: gitlab.local.ildoc.it
  letsencrypt_email: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/gitlab:letsencrypt_email') }}"
  cloudflare_token: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/gitlab:cloudflare_token') }}"
  cleanup:
    interval_hours: 6
    aggressive_hour: 2
    disk_threshold: 85
    prune_until_hours: 24
    max_builds: 10

kubernetes:
  k8s_version: "1.31"
  vip_address: "192.168.0.80"
  vip_interface: "ens18"
  kube_vip_tag_version: "v0.8.9"
  cilium_tag_version: "v1.17.2"

argocd:
  namespace: argocd
  git_repo: https://gitlab.local.ildoc.it/ildoc/homelab
  git_user: ildoc
  git_password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/argocd:git_password') }}"

external_secrets:
  vault_token: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/external-secrets:vault_token') }}"

invidious:
  db_user: invidious_user
  db_password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/invidious:postgres_password') }}"
  db_name: invidious_db
  db_host: "192.168.0.30"
  visitor_data: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/invidious:visitor_data') }}"
  po_token: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/invidious:po_token') }}"
  hmac_key: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/invidious:hmac_key') }}"
  companion_key: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/invidious:companion_key') }}"

wireguard:
  password_hash: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/wireguard:password_hash') }}"
  tcp_port: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/wireguard:tcp_port') }}"
  udp_port: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/wireguard:udp_port') }}"
  host: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/wireguard:host') }}"

db:
  postgres:
    admin_user: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/postgres:admin_user') }}"
    admin_password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/postgres:admin_password') }}"
    pgadmin_email: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/postgres:pgadmin_email') }}"
    pgadmin_password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/postgres:pgadmin_password') }}"

    databases:
      - name: invidious_db
        owner: invidious_user
        encoding: UTF8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
        extensions:
          - pg_trgm
          - btree_gin
      
      - name: authentik_db
        owner: authentik_user
        encoding: UTF8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
      
      - name: matrix_db
        owner: matrix_user
        encoding: UTF8
        lc_collate: C
        lc_ctype: C

      - name: sonarqube_db
        owner: sonarqube_user
        encoding: UTF8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8

    users:
      # Utenti applicativi con accesso completo al loro database
      - name: invidious_user
        password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/invidious:postgres_password') }}"
        databases:
          - invidious_db
        privileges: ALL
        table_privs: ALL
        sequence_privs: ALL
      
      - name: authentik_user
        password: "{{ lookup('community.hashi_vault.hashi_vault', 'cross/data/apps/authentik:postgres_password') }}"
        databases:
          - authentik_db
        privileges: ALL
        table_privs: ALL
        sequence_privs: ALL

      - name: matrix_user
        password: "{{ lookup('community.hashi_vault.hashi_vault', 'cross/data/apps/matrix:postgres_password') }}"
        databases:
          - matrix_db
        privileges: ALL
        table_privs: ALL
        sequence_privs: ALL
      
      - name: sonarqube_user
        password: "{{ lookup('community.hashi_vault.hashi_vault', 'cross/data/apps/sonarqube:postgres_password') }}"
        databases:
          - sonarqube_db
        privileges: ALL
        table_privs: ALL
        sequence_privs: ALL

redis:
  config:
    appendonly: true
    maxmemory: 2gb
    maxmemory_policy: allkeys-lru
    # Aggiungi altre configurazioni Redis se necessario
  
  # ACL Users - gestione dichiarativa
  users:
    - name: default
      enabled: false  # Disabilita l'utente default per sicurezza
    
    - name: admin
      enabled: true
      password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/redis:admin_password') }}"
      permissions:
        - "+@all"
        - "~*"
      description: "Admin user con accesso completo"
    
    # - name: harbor
    #   enabled: true
    #   password: "{{ lookup('community.hashi_vault.hashi_vault', 'cross/data/apps/harbor:redis_password') }}"
    #   permissions:
    #     - "+@read"
    #     - "+@write"
    #     - "+@connection"
    #     - "-@dangerous"
    #     - "~app:*"
    #   description: "Utente read-write per applicazioni"

    - name: authentik
      enabled: true
      password: "{{ lookup('community.hashi_vault.hashi_vault', 'cross/data/apps/authentik:redis_password') }}"
      permissions:
        - "allchannels"
        - "~*"
        - "+@read"
        - "+@write"
        - "+@keyspace"
        - "+@connection"
        - "+@pubsub"
        - "+@scripting"
        - "-@dangerous"
        - "+select"
        - "+keys"
      description: "Utente read-write per applicazioni"

    # - name: app_readonly
    #   enabled: true
    #   password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/redis:app_readonly_password') }}"
    #   permissions:
    #     - "+@read"
    #     - "+@connection"
    #     - "~app:*"
    #   description: "Utente read-only per applicazioni"
    
    # - name: app_readwrite
    #   enabled: true
    #   password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/redis:app_readwrite_password') }}"
    #   permissions:
    #     - "+@read"
    #     - "+@write"
    #     - "+@connection"
    #     - "-@dangerous"
    #     - "~app:*"
    #   description: "Utente read-write per applicazioni"
    
    # - name: cache_service
    #   enabled: true
    #   password: "{{ lookup('community.hashi_vault.hashi_vault', 'ansible/data/redis:cache_password') }}"
    #   permissions:
    #     - "+get"
    #     - "+set"
    #     - "+del"
    #     - "+expire"
    #     - "+ttl"
    #     - "+exists"
    #     - "~cache:*"
    #   description: "Utente dedicato per servizio cache"

  # Network e binding
  bind_address: "0.0.0.0"
  port: 6379
  
  # RedisInsight
  redisinsight:
    enabled: true
    port: 8080
